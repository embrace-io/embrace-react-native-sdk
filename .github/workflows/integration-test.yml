name: Integration Tests

on:
  workflow_dispatch:
  pull_request:
    branches: ['release/**']
  # TODO remove after testing
  push:
    branches: ['jpmunz/EMBR-4920-browserstack-local']

jobs:
  build:
    strategy:
      matrix:
        node-version: [18.x]
        jdk-version: ["17"]
        # TODO add full set back after testing
        # test-app: [expo-rn74, rn75, rn74, rn73, rn72, rn71]
        test-app: [rn74]
        # TODO
        # platform: [android, ios]
        platform: [ios]

    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node (${{ matrix.node-version }})
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Enables corepack
        run: corepack enable

      - name: Install Root Node Modules
        run: yarn install

      - name: Install JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jdk-version }}
        if: matrix.platform == 'android'

      - name: Install Integration Tests Node Modules
        working-directory: ./integration-tests
        run: npm install

      - name: Setup Keychain for XCode Signing
        env:
          CI_KEYCHAIN: ${{ secrets.CI_KEYCHAIN }}
          CI_KEYCHAIN_PASSWORD: ${{ secrets.CI_KEYCHAIN_PASSWORD }}
          CERT: ${{ secrets.CERT }}
          CERT_PASS: ${{ secrets.CERT_PASS}}
          CERT_IDENTITY: ${{ secrets.CERT_IDENTITY }}
        run: |
          # Importing certificate from environment
          CERT_PATH=$RUNNER_TEMP/distribution_certificate.p12
          echo -n "$CERT" | base64 --decode -o $CERT_PATH

          # Preparation steps
          security list-keychains -d user -s login.keychain
          security delete-keychain "$CI_KEYCHAIN" || true

          # Create temporary keychain
          security create-keychain -p "$CI_KEYCHAIN_PASSWORD" "$CI_KEYCHAIN"
          security list-keychains -d user -s "$CI_KEYCHAIN" $(security list-keychains -d user | sed s/\"//g)
          security set-keychain-settings "$CI_KEYCHAIN"
          security unlock-keychain -p "$CI_KEYCHAIN_PASSWORD" "$CI_KEYCHAIN"

          # Add certificate to keychain and allow codesign to use it
          security import "$CERT_PATH" -t cert -f pkcs12 -k "$CI_KEYCHAIN" -P "$CERT_PASS" -A -T "/usr/bin/codesign"
          security set-key-partition-list -S apple-tool:,apple:, -s -k $CI_KEYCHAIN_PASSWORD -D "${CERT_IDENTITY}" -t private $CI_KEYCHAIN
        if: matrix.platform == 'ios'

      - name: Build Test App
        working-directory: ./integration-tests
        run: ./build-test-app.sh ${{ matrix.test-app }} ${{ matrix.platform }} namespace-${{ matrix.test-app }}-${{ matrix.platform }}-${{ github.run_id }}

      - name: Run Integration Tests
        working-directory: ./integration-tests
        run:  npm run test-remote
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_APP_NAME: ${{ matrix.test-app }}
          BROWSERSTACK_PLATFORM: ${{ matrix.platform }}
          CI_RUN_ID: ${{ github.run_id }}
