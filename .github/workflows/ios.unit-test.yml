name: packages/core/ios Unit Test

on:
  pull_request:
    branches:
      - 5.0 # TBD update branch name

jobs:
  build:
    strategy:
      matrix:
        node-version: [18.x]
        os: [macos-latest]
        swift: ["5.3"]

    runs-on: ${{ matrix.os }}
    env:
      OS: 17.5
      PLATFORM: "iOS Simulator"
      DEVICE: "iPhone 15 Pro"
      TEST_PROJECT_PATH: packages/core/test-project
      WORKSPACE: "RNEmbraceTestProject"
      SCHEME: "RNEmbraceTests"
      XCPRETTY_JSON_FILE_OUTPUT: reports/tests.json

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: "npm"

    - name: Enables corepack
      run: corepack enable
    
    - name: Yarn dependencies | Global
      run: yarn install --immutable

    - name: Yarn dependencies | Test Project
      run: |
        cd ${{ env.TEST_PROJECT_PATH }}
        yarn install

    - name: Cache CocoaPods
      id: cache-cocoapods
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.TEST_PROJECT_PATH }}/ios/Pods
          ${{ env.TEST_PROJECT_PATH }}/ios/Podfile.lock
        key: ${{ runner.os }}-pods-${{ hashFiles('${{ env.TEST_PROJECT_PATH }}/ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Cache Derived Data
      uses: actions/cache@v3
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: derived-data-${{ runner.os }}-${{ hashFiles('**/*.xcodeproj/project.pbxproj') }}-${{ hashFiles('Podfile.lock') }}
        restore-keys: |
          derived-data-${{ runner.os }}-
      

    - name: Install CocoaPods
      run: |
        cd ${{ env.TEST_PROJECT_PATH }}/ios
        bundle install
        bundle exec pod install --verbose
      if: steps.cache-cocoapods.outputs.cache-hit != 'true'

    - name: Debug Environment
      run: |
        echo "Current Directory: $(pwd)"
        echo "Directory Contents:"
        ls -la

    - name: Run iOS unit tests
      env:
        XCPRETTY_JSON_FILE_OUTPUT: ${{ env.XCPRETTY_JSON_FILE_OUTPUT }}
        OTHER_SWIFT_FLAGS: '-Wno-documentation'
        OTHER_CFLAGS: '-Wno-documentation'
      run: |
        cd ${{ env.TEST_PROJECT_PATH }}/ios
        xcodebuild test \
          -workspace ${{ env.WORKSPACE }}.xcworkspace \
          -scheme ${{ env.SCHEME }} \
          -destination "platform=${{ env.PLATFORM }},name=${{ env.DEVICE }},OS=${{ env.OS }}"
      continue-on-error: false

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-report
        path: ${{ env.XCPRETTY_JSON_FILE_OUTPUT }}
